.. _rm-prereq-postgres:

==================================
PostgreSQL Migration Prerequisites
==================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

To run sync jobs from an PostGreSQL source database, the database may 
require some configuration changes. If Relational Migrator determines the 
database needs configuration changes, it automatically generates a 
SQL script with the required changes. It is recommended to have a 
Database Administrator (DBA) review the commands in this script and 
perform their execution on the database server. These instructions 
configuration PostGreSQL for both types of sync jobs:

.. include:: /includes/fact-short-sync-job-desc.rst

About this Task
---------------

Relational Migrator uses the PostgreSQL ``pgoutput`` plugin for logical 
decoding. This plug-in is included in PostgreSQL versions 10+, no 
additional installation or configuration is required. 

Before you Begin
----------------

If PostgreSQL is configured as a cluster, Relational Migrator must connect
to the master server.

Steps
-----

.. tabs::

   .. tab:: Snapshot Jobs
      :tabid: enable-snapshot-jobs

      For snapshot jobs against PostGreSQL, there are no required 
      prerequisites.

   .. tab:: Continuous Jobs
      :tabid: enable-continuous-jobs

      .. procedure::
         :style: normal

         For continuous jobs against PostGreSQL, you must edit the 
         configuration, grant role permissions to the service account, 
         and create a publication.

         .. step:: Edit the configuration file 

            Logical replication may not be enabled by default. To enable logical 
            replication, change the `wal_level <https://postgresqlco.nf/doc/en/param/wal_level>`__ 
            configuration in the 
            `postgresql.conf configuration file <https://www.postgresql.org/docs/current/config-setting.html>`__. 
            You *must restart the database instance* after changing the configuration file. 

            .. code-block:: none

               wal_level = logical 

         .. step:: Create a SQL replication role

            a. Create a role with ``REPLICATION`` and ``LOGIN`` 
               database permissions:

               .. code-block:: sql

                  CREATE ROLE REPLICATION_GROUP REPLICATION LOGIN;

            #. Grant the required ``SELECT`` table and ``USAGE``
               schema permissions to the role:

               .. code-block:: sql
                  :copyable: true

                  GRANT USAGE ON SCHEMA SCHEMA_NAME TO REPLICATION_GROUP;
                  GRANT SELECT ON table_name TO REPLICATION_GROUP;
                  -- ADDITIONAL GRANT SELECT STATEMENTS...

            #. Grant the REPLICATION_GROUP role to the service account

               Replace ``ORIGINAL_OWNER`` with the owner of the 
               participating tables. You must do this for each table in 
               the migration. ``POSTGRES`` is a placeholder for the 
               service account used with Relational Migrator.

               .. code-block:: sql
                  :copyable: true

                  GRANT REPLICATION_GROUP TO ORIGINAL_OWNER;
                  GRANT REPLICATION_GROUP TO POSTGRES;

         .. step:: Grant ownership of the tables to the REPLICATION_GROUP role

            .. code-block:: sql
               :copyable: true

               ALTER TABLE SCHEMA.TABLE OWNER TO REPLICATION_GROUP;
               -- ADDITIONAL ALTER TABLE STATEMENTS...

         .. step:: Create a publication

            Create a `publication <https://www.postgresql.org/docs/current/logical-replication-publication.html>`__ 
            each ``schema.table`` needs to be in the ``FOR`` statement 
            comma-separated:

            .. code-block:: sql
               :copyable: true

               CREATE PUBLICATION "MIGRATOR_NAME_PUBLICATION" 
               FOR TABLE "SCHEMA"."TABLE","SCHEMA"."TABLE2"; 

         .. step:: Set replica identity to FULL for each table

            .. code-block:: sql
               :copyable: true

               ALTER TABLE SCHEMA.TABLE REPLICA IDENTITY FULL;
               -- ADDITIONAL ALTER TABLE STATEMENTS...

Learn More
----------

Relational Migrator relies on the open-source Debezium connector to 
capture row-level changes. For more details, see
`Debezium PostgreSQL <https://debezium.io/documentation/reference/stable/connectors/postgresql.html>`__.
