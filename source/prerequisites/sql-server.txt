.. _rm-prereq-sqlserver:

==================================
SQL Server Migration Prerequisites
==================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

To run sync jobs from a SQL Server source database, 
the database may require some configuration changes. Before you start a 
sync job, Relational Migrator checks if the 
database is configured correctly. If Relational Migrator determines the 
database needs configuration changes, it will automatically generate a 
SQL script with the required changes. The commands in this script should 
be reviewed by a DBA and executed on the database server. This topic 
provides more details on the required configuration steps. SQL Server 
configuration depends on the type of sync job: 

- Snapshot sync jobs migrate all the data and then stops.
- Continuous sync job run a snapshot and then enter a CDC stage to 
  continuously replicate data changes.

About this Task
---------------

- This page covers the details of the SQL scripts automatically 
  generated by Relational Migrator.

- Relational Migrator automatically detects configuration settings when 
  connecting to your database and generates the appropriate SQL 
  statements to enable CDC if required.

- Relational Migrator does not create any indexes on SQL Server to 
  facilitate sync jobs. The create index creation permission is not 
  required.

Steps
-----

The easiest way to set up your database is to run the automatically 
generated script that Relational Migrator prompts you to download when
you :ref:`create a sync job <rm-create-jobs>`. If you would like to 
understand the permissions or run the SQL manually, read the 
procedures below.

Configure your SQL Server Instance based on the sync job type. 
Refer to the tab below for details on snapshot and continuous sync 
job configurations.


.. tabs::

   .. tab:: Snapshot Jobs
      :tabid: enable-snapshot-jobs

      For snapshot jobs against SQL Server, you must enable 
      CDC at the database level. 

      .. procedure::
         :style: normal

         .. step:: Configure CDC at the Database Level

          Enabling CDC at the database-level CDC generates a small 
          number of system tables in the database, leaving user tables 
          unchanged, and does not add any performance overhead. Enabling
          CDC alone does not result in changes being captured.

            .. include:: /includes/fact-enable-cdc-database.rst

   .. tab:: Continuous Jobs
      :tabid: enable-continuous-jobs

      For continuous jobs against SQL Server, you must enable 
      CDC at both the database level and at the table level for 
      each table that you want to track.

      .. procedure::
         :style: normal

         .. step:: Enable the SQL Server agent and check database permissions

            To enable the CDC option on SQL Server:

            a. You must have the server level ``sysadmin`` role. 
            #. You must have the database level ``db_owner`` role.
            #. The `SQL Server agent <https://learn.microsoft.com/en-us/sql/ssms/agent/sql-server-agent?view=sql-server-ver16>`__
               must be running.
            #. The service account used to connect to SQL Server requires 
               Select permission against all required tables.

         .. step:: Configure CDC at the database level

            You can check the SQL Server CDC settings by examining the ``is_tracked_by_cdc`` 
            column in the `sys.tables catalog view <https://learn.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-tables-transact-sql?view=sql-server-ver16>`__. 
            A value of ``1`` for ``is_tracked_by_cdc`` indicates the table 
            is enabled for change data capture.

            .. include:: /includes/fact-enable-cdc-database.rst

         .. step:: Configure CDC at the table level

            To enable CDC at the table level
            use the ``sys.sp_cdc_enable_table`` stored procedure. 

            The code block below is a sample of the 
            automatically generated code.

            You can run the code manually to enable table CDC:

            .. code-block:: sql
               :copyable: true

               USE MyDB
               GO
               EXEC sys.sp_cdc_enable_table
               @source_schema = N'dbo',
               @source_name   = N'MyTable',
               @role_name     = N'MyRole',
               @filegroup_name = N'MyDB_CT',
               @supports_net_changes = 1
               GO

Learn More
----------

Relational Migrator relies on the open-source Debezium connector to 
capture row-level changes. For more details, see
`Debezium SQL Server <https://debezium.io/documentation/reference/stable/connectors/sqlserver.html#_enabling_cdc_on_a_sql_server_table>`__.

