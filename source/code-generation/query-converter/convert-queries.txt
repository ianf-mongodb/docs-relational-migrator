.. _rm-convert-queries:

===============
Convert Queries
===============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can convert SQL queries to MongoDB syntax with the query converter. 
Query converter accounts for your project's mapping rules and schema 
transformations when converting your SQL code.

About this Task
---------------

.. include:: /includes/fact-query-converter-generic.rst

- .. include:: /includes/fact-query-converter-disclaimer.rst

Steps
-----

.. procedure::
   :style:  normal

   .. step:: Navigate to the query converter pane

      From the :guilabel:`Code Generation` tab, click the 
      :guilabel:`Query Converter` pane.

   .. step:: Open the SQL query converter view

      If it is your first time using the query converter in your 
      project, click :guilabel:`Paste SQL Query`.
      If you have previously converted SQL code in your project, click the
      :guilabel:`+ ADD` button on the left-hand pane next to 
      :guilabel:`Queries`.

   .. step:: Enter your SQL query

      a. Copy your SQL query to your clipboard.
      #. Under the :guilabel:`SQL Query` header, paste your SQL query
         into the text box.
   
   .. step:: Convert and test syntax

      a. Click the :guilabel:`Convert` button. Wait for the AI to 
         convert your code. The converted MongoDB syntax code displays 
         in the :guilabel:`Converted MongoDB Query` text box.
      #. Click the :icon-fa5:`copy` icon to copy the MongoDB syntax 
         to your clipboard.
      #. Test and validate the generated MongoDB syntax.

      .. tip:: 

         .. include:: /includes/fact-query-converter-filter.rst

Examples
--------

The following table shows examples of SQL queries converted to MongoDB 
syntax using query converter:

.. list-table::
   :header-rows: 1
   :widths: 40 60

   * - SQL Syntax
     - MongoDB Syntax

   * - 
       .. code-block:: sql
          :copyable: false

          SELECT * 
          FROM CUSTOMERS
     - 
       .. code-block:: 
          :copyable: false

          async function query(db) {
            return await db.collection('CUSTOMERS').find({
            }).toArray();
          }

   * -
      .. code-block:: sql
         :copyable: false

         SELECT CONTACTNAME, CITY 
         FROM CUSTOMERS 
         WHERE CONTACTNAME LIKE '%SMITH%'

     - 
      .. code-block:: node
         :copyable: false

         async function query(db) {
         return await db.collection('CUSTOMERS').find({
               CONTACTNAME: { $regex: '.*SMITH.*' }
            }, {
               projection: { CONTACTNAME: 1, CITY: 1, _id: 0 }
            }).toArray();
         }

   * -
      .. code-block:: sql
         :copyable: false

         SELECT CUSTOMERID, CITY
         FROM CUSTOMERS AS C
         JOIN ORDERS AS O
            ON C.CUSTOMERID = O.CUSTOMERID
         WHERE CONTACTNAME IN('ABI','JIM')

     -
      .. code-block:: node
         :copyable: false

         const query = async (db) => {
         return await db.collection('Customers').aggregate([
            {
               $lookup: {
               from: 'Orders',
               localField: 'CUSTOMERID',
               foreignField: 'CUSTOMERID',
               as: 'customer_orders'
               }
            },
            {
               $match: {
               CONTACTNAME: { $in: ['ABI', 'JIM'] }
               }
            },
            {
               $project: {
               CUSTOMERID: 1,
               CITY: 1
               }
            }
            ]).toArray();
         };

Next Steps
----------

- :ref:`rm-convert-views`
- :ref:`rm-convert-stored-procedures`

Learn More
----------

- `SQL Comparison Chart <https://www.mongodb.com/docs/manual/reference/sql-comparison/>`_
- `SQL to Aggregation Mapping Chart <https://www.mongodb.com/docs/manual/reference/sql-aggregation-comparison/>`_
