.. _rm-convert-queries:

===============
Convert Queries
===============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


You can convert SQL queries to MongoDB syntax with query converter. 
Relational Migrator considers the mapping rules and schema 
transformations defined in your project when converting your SQL code.

About this Task
---------------

There are complexity limits to consider when using query converter. 
The AI model cannot handle overly complex SQL syntax. If your SQL syntax
is not being converted accurately, consider refactoring the SQL code.

Conversions are currently limited to 10,000 character.

Before you Begin
----------------

.. include:: /includes/fact-query-converter-disclaimer.rst

Steps
-----

.. procedure::
   :style:  normal

   .. step:: Navigate to the Query Converter pane

      a. From the `Code Generation` tab, click the `Query Converter` pane.
      #. Click the :guilabel:`+ ADD` button on the left-hand pane 
         next to :guilabel:`Queries`.

   .. step:: Enter your SQL query

      a. Copy your SQL query to your clipboard.
      #. Under the :guilabel:`SQL Query` header, paste your SQL query 
         into the text box.
   
   .. step:: Convert, export and test syntax

      a. Click the :guilabel:`Convert` button. Wait for the AI to 
         convert your code. The converted MongoDB syntax code displays 
         in the :guilabel:`Converted MongoDB Query` text box.
         
      #. Click the :icon-fa5:`copy` icon to copy the MongoDB syntax to your 
         clipboard.
      #. Test and validate the generated MongoDB syntax. 

Example
-------

The following table shows examples of SQL queries converted to MongoDB 
syntax using query converter:

.. list-table::
   :header-rows: 1
   :widths: 30 70

   * - SQL Syntax
     - MongoDB Syntax

   * - 
       .. code-block:: sql
          :copyable: false

          SELECT * 
          FROM CUSTOMERS
     - 
       .. code-block:: javascript
          :copyable: false

          async function query(db) {
            return await db.collection('CUSTOMERS').find({}).toArray();
         }

Next Steps
----------
- :ref:`rm-convert-views`
- :ref:`rm-convert-stored-procedures`
