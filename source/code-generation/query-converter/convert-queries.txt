.. _rm-convert-queries:

===============
Convert Queries
===============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can convert SQL queries to MongoDB syntax with query converter. 
Relational Migrator considers the mapping rules and schema 
transformations defined in your project when converting your SQL code.

About this Task
---------------

- There are complexity limits to consider when using query converter. 
  The AI model cannot handle overly complex SQL syntax. If your SQL syntax
  is not being converted accurately, consider refactoring the SQL code.

- Relational Migrator uses metadata from your relational and MongoDB 
  connections to help convert syntax. For best results, use queries that 
  are based on the schema of your project's relational database 
  connection.

- Converted queries are saved in your project and persist through 
  project import and exports.

- Conversions are limited to 10,000 characters.

Before you Begin
----------------

.. include:: /includes/fact-query-converter-disclaimer.rst

Steps
-----

.. procedure::
   :style:  normal

   .. step:: Navigate to the Query Converter pane

      a. From the :guilabel:`Code Generation` tab, click the 
         :guilabel:`Query Converter` pane.

   .. step:: Open the SQL Query Convert view

      a. If it is your first time using the Query Converter in your 
         project, click :guilabel:`Paste SQL Query`.
      #. If your project already has a converted query, click the 
         :guilabel:`+ ADD` button on the left-hand pane next to 
         :guilabel:`Queries`.

   .. step:: Enter your SQL query

      a. Copy your SQL query to your clipboard.
      #. Under the :guilabel:`SQL Query` header, paste your SQL query
         into the text box.
   
   .. step:: Convert, export and test syntax

      a. Click the :guilabel:`Convert` button. Wait for the AI to 
         convert your code. The converted MongoDB syntax code displays 
         in the :guilabel:`Converted MongoDB Query` text box.
      #. Click the :icon-fa5:`copy` icon to copy the MongoDB syntax 
         to your clipboard. To add additional queries, click the 
         :guilabel:`+ ADD` button on the left-hand pane next to 
         :guilabel:`Queries`.
      #. Test and validate the generated MongoDB syntax.

      .. tip:: 

         You can use the :guilabel:`Filter` text box to filter queries 
         based on table name and SQL syntax.

Examples
--------

The following table shows examples of SQL queries converted to MongoDB 
syntax using query converter:

.. list-table::
   :header-rows: 1
   :widths: 40 60

   * - SQL Syntax
     - MongoDB Syntax

   * - 
       .. code-block:: sql
          :copyable: false

          SELECT * 
          FROM CUSTOMERS
     - 
       .. code-block:: 
          :copyable: false

          async function query(db) {
            return await db.collection('CUSTOMERS').find({
            }).toArray();
          }

   * -
      .. code-block:: sql
         :copyable: false

         SELECT CONTACTNAME, CITY 
         FROM CUSTOMERS 
         WHERE CONTACTNAME LIKE '%SMITH%'

     - 
      .. code-block:: node
         :copyable: false

         async function query(db) {
         return await db.collection('CUSTOMERS').find({
               CONTACTNAME: { $regex: '.*SMITH.*' }
            }, {
               projection: { CONTACTNAME: 1, CITY: 1, _id: 0 }
            }).toArray();
         }

   * -
      .. code-block:: sql
         :copyable: false

         SELECT CUSTOMERID, CITY
         FROM CUSTOMERS AS C
         JOIN ORDERS AS O
            ON C.CUSTOMERID = O.CUSTOMERID
         WHERE CONTACTNAME IN('ABI','JIM')

     -
      .. code-block:: node
         :copyable: false

         const query = async (db) => {
         return await db.collection('Customers').aggregate([
            {
               $lookup: {
               from: 'Orders',
               localField: 'CUSTOMERID',
               foreignField: 'CUSTOMERID',
               as: 'customer_orders'
               }
            },
            {
               $match: {
               CONTACTNAME: { $in: ['ABI', 'JIM'] }
               }
            },
            {
               $project: {
               CUSTOMERID: 1,
               CITY: 1
               }
            }
            ]).toArray();
         };

Next Steps
----------
- :ref:`rm-convert-views`
- :ref:`rm-convert-stored-procedures`


Learn More
----------

- `MongoDB Modernization Guide <https://www.mongodb.com/modernize?tck=docs_server>`_
- `SQL Comparison Chart <https://www.mongodb.com/docs/manual/reference/sql-comparison/>`_
- `SQL to Aggregation Mapping Chart <https://www.mongodb.com/docs/manual/reference/sql-aggregation-comparison/>`_