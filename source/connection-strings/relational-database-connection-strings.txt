======================================
Relational Database Connection Strings
======================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/uri-usage-disclaimer.rst

To analyze a schema or start a migration job, Relational Migrator must connect
to your relational database. To connect to your source database, the
Relational Migrator requires a JDBC-formatted connection string. This document
describes the URI formats for defining connections to relational
database systems.

Relational Migrator can connect to the following relational database systems:

* :ref:`MySQL <rm-mysql>`
* :ref:`Oracle <rm-oracle>`
* :ref:`PostgreSQL <rm-postgresql>`
* :ref:`SQL Server <rm-sql-server>`

Relational Migrator's connection form contains fields where you can specify a
username and password for the connection. The form obscures passwords
and is more secure than specifying plaintext credentials in the URI.

.. _rm-mysql:

MySQL
-----

The general form for a MySQL connection string is:

.. code-block::

   jdbc:mysql://<host:port>/<database>?<properties>

For example, consider the following connection string:

.. code-block::

   jdbc:mysql://host1:3306/test

The preceding connection string specifies these connection
details:

.. list-table::
   :header-rows: 1

   * - Property
     - Value
   * - Host
     - ``host1``
   * - Port
     - ``3306``
   * - Database
     - ``test``

.. note::

   To learn more about MySQL connection strings, see:

   * `MySQL Connection URL Syntax <https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-jdbc-url-format.html>`__

   * `Connection Configuration Properties <https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-configuration-properties.html>`__

.. _rm-oracle:

Oracle
------

The general form for an Oracle connection string is:

.. code-block::

   jdbc:oracle:thin:@<host:port>:SID

For example, consider the following connection string:

.. code-block::

   jdbc:oracle:thin:@prodHost:1521:ORCL

The preceding connection string specifies these connection
details:

.. list-table::
   :header-rows: 1

   * - Property
     - Value
   * - Host
     - ``prodHost``
   * - Port
     - ``1521``
   * - SID (System Identifier)
     - ``ORCL``

.. note::

   To learn more about Oracle connection strings, see:

   * `Oracle JDBC Developer's Guide and Reference <https://docs.oracle.com/cd/B28359_01/java.111/b31224/jdbcthin.htm>`__.

   * `Connection String Attributes <https://docs.oracle.com/cd/E85694_01/ODPNT/ConnectionConnectionString.htm#GUID-DF4ED9A3-1AAF-445D-AEEF-016E6CD5A0C0__BABBAGJJ>`__

.. _rm-postgresql:

PostgreSQL
----------

The general form for a PostgreSQL connection string is:

.. code-block::

   jdbc:postgresql://<host:port>/<database>?<properties>

For example, consider the following connection string:

.. code-block::

   jdbc:postgresql://localhost:5432/pg-demo

The preceding connection string specifies these connection
details:

.. list-table::
   :header-rows: 1

   * - Property
     - Value
   * - Host
     - ``localhost``
   * - Port
     - ``5432``
   * - Database
     - ``pg-demo``   

.. note::

   To learn more about PostgreSQL connection strings, see:
   * `PostgreSQL Connection Configuration Properties <https://jdbc.postgresql.org/documentation/80/connect.html>`__


.. _rm-sql-server:

SQL Server
----------

The general form for a SQL Server connection string is:

.. code-block::

   jdbc:sqlserver://[serverName[\instanceName][:portNumber]][;property=value[;property=value]]

For example, consider the following connection string:

.. code-block::

   jdbc:sqlserver://localhost:1433;databaseName=test

The preceding connection string specifies these connection
details:

.. list-table::
   :header-rows: 1

   * - Property
     - Value
   * - Host
     - ``localhost``
   * - Port
     - ``1433``
   * - databaseName
     - ``test``

**Using Windows Integrated Authentication**

To enable Windows Integrated Authentication, add ``integratedSecurity=true;`` to the URI options.
Leave the ``Username`` and ``Password`` fields blank. Windows Integrated Authentication connects 
to the database using the credentials of the user who launched the Relational Migrator executable.

**Using TLS**

JDBC connections to SQL Server use Transport Layer Security (TLS) by default.
The encrypt property controls TLS. To disable it, set ``encrypt=false;``.
When TLS is enabled, the driver tries to validate the server's certificate by default.
To implicitly trust the server certificate, set ``trustServerCertificate=true;``.

.. note::

   To learn more about SQL Server connection strings, see:


   * `Setting Connection Properties <https://learn.microsoft.com/en-us/sql/connect/jdbc/setting-the-connection-properties>`__

   * `SQL Docs: Building the Connection URL <https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15>`__.

   * `Connecting to SQL Server with the JDBC Driver <https://docs.microsoft.com/en-us/sql/connect/jdbc/connecting-to-sql-server-with-the-jdbc-driver?view=sql-server-ver15>`__



``databaseName`` Property Behavior
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In a SQL Server connection string, use the ``databaseName`` property to
specify the database to connect to. If you omit the ``databaseName``
property, the connection still succeeds but you can only see objects in
the default ``dbo`` schema in all databases.

If you specify the ``databaseName`` property, you can see tables from
all schemas within the specified database.