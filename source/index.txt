:template: product-landing
:hidefeedback: header
:noprevnext:

===========================
What is Relational Migrator
===========================

.. introduction::

   MongoDB Relational Migrator is a tool to help you migrate relational workloads to MongoDB. 
   Relational Migrator allows you to:

   - Transition your relational data and schemas to MongoDB.
   - Plan and orchestrate your MongoDB migrations.
   - Migrate at scale and resiliency.

   .. button:: Install Relational Migrator
      :uri: http://docs-migrator.s3-website-us-east-1.amazonaws.com/main/Installation/

.. image:: /img/hero.png
   :alt: Homepage hero image

.. kicker:: What You Can Do

Control Your Migration To MongoDB
---------------------------------

.. tabs::

   .. tab:: Migrate To MongoDB
      :tabid: Migrate To MongoDB

      .. procedure::

         .. step:: Check Relational Migrator For Your Database

            Relational Migrator supports migrations from Long-term support 
            versions of the following databases:

            - MySQL
            - Oracle
            - PostgreSQL
            - SQL Server

         .. step:: Identify Your Migration Type

            Using snapshot or continuous sync jobs you can choose a 
            migration strategy that is right for you.

      .. image:: /img/tab1img.png
         :alt: Mapping Rules
         :figwidth: 100%

   .. tab:: Model your Data
      :tabid: Model your Data

      .. procedure::

         .. step:: Choose your Mapping Rules

            Define customized mapping rules that convert your table 
            ow data to MongoDB documents. Relational Migrator helps 
            you transform your data models so that they work best 
            for your applications.
         
         .. step:: Define Calculated Fields

            Optionally define additional fields in the form of custom 
            JavaScript expressions as part of your migration to MongoDB. 

      .. image:: /img/Mapping-Rules.png
         :alt: Mapping Rules

   .. tab:: Visualize your Migration
      :tabid: Visualize your Migration

      .. procedure::

         .. step:: Connect your Source And Destination Databases

            When creating a Relational Migrator project, enter your 
            connection details or provide a URI for each of your 
            source and destination databases.

         .. step:: Visualize your Destination Data Model

            View both your source relational and destination MongoDB 
            data models. Using Relational Migrator diagrams helps you edit your 
            data model and visualize your migration in real time, before 
            you run any sync jobs.

      .. image:: /img/Schema-Models.png
         :alt: Schema Models

   .. tab:: Convert your Application Code
      :tabid: deploy

      .. procedure::
         
         .. step:: Pick A Data Modeling Template

            Select a language and a data model template for converting 
            your legacy application code. Relational Migrator 
            supports C#, Java, JavaScript and JSON and offers several
            templating options.

         .. step:: Convert your Data Layer Source Code

            Convert your existing data layer application code. With Code Generation,
            you can automatically transform application code that was 
            written for connecting with relational data models to 
            connect to MongoDB data models.

      .. code-block:: javascript

         /**
         * Generated by MongoDB Relational Migrator 
         * https://www.mongodb.com/products/relational-migrator 
         * Collection: actor
         * Language: JavaScript
         * Template: Mongoose
         * Generated on 5/1/23
         */
         import mongoose from "mongoose";
         const Schema = mongoose.Schema;
         const model = mongoose.model;
         export const actor_Mongoose = new Schema({
            "_id": mongoose.ObjectId,
            "first_name": String,
            "last_name": String,
            "last_update": String,
         }, { collection: "actor" })
         export const actor_MongooseModel = model("actor_Mongoose", actor_Mongoose);

.. kicker:: Related Products & Resources

Go Further with MongoDB
-----------------------

Explore libraries and tools for MongoDB.

.. card-group::
   :columns: 3
   :style: compact

   .. card::
      :cta: Learn about Drivers
      :url: https://www.mongodb.com/docs/drivers/
      :icon-alt: MongoDB Atlas icon

      Use MongoDB in your applicationâ€™s language

   .. card::
      :cta: View Compass Docs
      :url: https://www.mongodb.com/docs/compass/current/
      :icon-alt: MongoDB University icon

      Visually explore your data with MongoDB Compass

   .. card::
      :cta: View Ops Manager
      :url: https://www.mongodb.com/docs/ops-manager/current/
      :icon-alt: MongoDB Server icon

      Manage and monitor your deployments
