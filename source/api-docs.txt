.. _rm-rest-api:

============================
Relational Migrator REST API
============================

.. facet::
   :name: genre 
   :values: tutorial

.. meta:: 
   :description: Learn about the MongoDB Relational Migrator REST API and how to use it.
   :keywords: data migration, rest api, open api

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The Relational Migrator REST API provides you with programatic access to
Relation Migrator with HTTPS endpoints. The REST API is a middleware 
service that sits between your application and your source and destination 
databases that you can send requests to facilitate and manage your sync 
jobs.

You don't need to install any additional extensions or packages to use 
the Relation Migrator REST API. The functionality is built into the core 
Relational Migrator product.

How the Data API Works
----------------------

The Relational Migrator REST API:

- Runs on the machine or server that the Relation Migrator application
  is installed on.
- The Rest API is governed by the host adapter binding.
- The Relational Migrator REST API *does not* currently support 
  authentication.

When to Use the Data API
------------------------

For server applications, and especially for high-load and latency
sensitive use-cases, we recommend connecting directly to Atlas with a
MongoDB driver. Operations called through a Data API endpoint take
longer to complete than the corresponding MongoDB operations called
through a driver. Additionally, the drivers provide more flexibility and
control over how your operations are executed. To learn more, visit the
:driver:`MongoDB Drivers </>` documentation.

We recommend using the Data API when:

- You want to run MongoDB operations from a web application or other
  client that you can't trust.

- You can't or don't want to manage a MongoDB driver in your server-side
  environment. For example, some edge compute environments don't support
  database drivers or connection pooling.

- You want to develop a new feature and prefer a flexible solution for
  working on the client side first before later creating and refining
  the API layer.

- You want to integrate Atlas data access into a federated API gateway.

- You want to connect to App Services from an environment not currently
  supported by an Atlas Device SDK and don't want to use a driver to connect
  over the :ref:`wire protocol <wire-protocol>`.

Constraints
-----------

The following constraints apply to Data API requests and responses: 

- Requests will time out after 300 seconds of runtime.

- Data API response payloads are limited to 350 MB in size.

.. toctree::
   :titlesonly:
   
   {+migrator-api-endpoints+} </api-docs/rest-api-spec>